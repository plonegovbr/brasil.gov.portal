[buildout]
extends =
    https://raw.github.com/collective/buildout.plonetest/master/test-4.3.x.cfg
    https://raw.github.com/collective/buildout.plonetest/master/qa.cfg
    https://raw.githubusercontent.com/plonegovbr/portal.buildout/master/buildout.d/versions.cfg

package-name = brasil.gov.portal
package-extras = [test]

parts +=
    code-analysis
    dependencychecker
    node
    omelette
    precompile
    pylint
    rebuild_i18n-sh
    staticresources

# XXX: avoid downloading wrong versions of IDG packages
#      we are still working on pre-releases
prefer-final = false

[instance]
# Com a atualização de plone.app.contenttypes, precisamos setar essa variável
# de ambiente.
environment-vars =
    TZ America/Sao_Paulo

[code-analysis]
recipe = plone.recipe.codeanalysis[recommended]
directory = ${buildout:directory}/src/brasil/gov/portal
clean-lines = True
clean-lines-exclude = ${:directory}/browser/viewlets/static
flake8-ignore = E501,P001,S001,T000,P002
multiprocessing = True
pre-commit-hook = True
return-status-codes = True

[dependencychecker]
recipe = zc.recipe.egg
eggs = z3c.dependencychecker

[omelette]
recipe = collective.recipe.omelette
eggs = ${test:eggs}

# É necessário ter o precompile para gerar os '*.mo' para os testes. Os '*.mo'
# só são gerados quando a instância sobe e para executar os testes a instância
# não é levantada.
[precompile]
recipe = plone.recipe.precompiler
eggs = brasil.gov.portal
compile-mo-files = true

[pylint]
recipe = zc.recipe.egg
eggs = pylint < 2.0

[node]
recipe = gp.recipe.node
version = 8.11.2
npms = npm yarn
scripts = npm yarn

[staticresources]
recipe = sc.recipe.staticresources
name = brasil.gov.portal
short_name = brasilgovportal

[versions]
# Como no extends de versões do release do IDG, logo acima, eu pino
# esse pacote, preciso "despiná-lo" aqui para que ele não seja
# baixado de novo: o fato dele estar no src não impede o download
# dele de novo como um egg se ele estiver pinado no extends.
brasil.gov.portal =
